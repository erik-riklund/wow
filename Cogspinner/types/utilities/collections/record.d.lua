--- @meta
--    ____                      _
--   / ___|___   __ _ ___ _ __ (_)_ __  _ __   ___ _ __
--  | |   / _ \ / _` / __| '_ \| | '_ \| '_ \ / _ \ '__|
--  | |__| (_) | (_| \__ \ |_) | | | | | | | |  __/ |
--   \____\___/ \__, |___/ .__/|_|_| |_|_| |_|\___|_|
--              |___/    |_|

--
--- Represents a data structure similar to a map, but with stricter key validation.
--- Keys can be either strings or tables, offering flexibility while maintaining data integrity.
---
--- @class Record
---
--- @field entries table<Record.KeyTypes, unknown> The internal table storing the key-value pairs.
--- @field get fun(self: Record, key: Record.KeyTypes): unknown Retrieves the value associated with the given key.
--- @field entryExists fun(self: Record, key: Record.KeyTypes): boolean Checks if a key exists in the record.
--- @field set fun(self: Record, key: Record.KeyTypes, value: unknown) Sets or updates the value for the given key.
--- @field remove fun(self: Record, key: Record.KeyTypes) Removes the key-value pair with the given key.
--

--
--- Defines the allowed data types for keys within a Record object.
---
--- @alias Record.KeyTypes string | table
--
