--- @meta
--    ____                      _                       
--   / ___|___   __ _ ___ _ __ (_)_ __  _ __   ___ _ __ 
--  | |   / _ \ / _` / __| '_ \| | '_ \| '_ \ / _ \ '__|
--  | |__| (_) | (_| \__ \ |_) | | | | | | | |  __/ |   
--   \____\___/ \__, |___/ .__/|_|_| |_|_| |_|\___|_|   
--              |___/    |_|                            
--

---
--- Manages event or trigger listeners (callbacks), providing
--- methods for registration, invocation, and removal.
--- 
--- @class listenerManager
--- @field listeners? table<number, listener> Stores registered listeners, where each listener has a callback function and an optional identifier.
--- 
--- @field registerListener fun(self: listenerManager, callback: function, identifier?: string) Registers a new listener with a callback function. An optional identifier can be provided, which is necessary for future removal of the listener.
--- @field invokeListeners fun(self: listenerManager, arguments?: unknown[], executeAsync?: boolean) Invokes all registered listeners, passing the provided arguments to each, where the `executeAsync` flag determines whether callbacks are executed asynchronously or not.
--- @field removeListener fun(self: listenerManager, identifier: string) Removes a listener from the list, identifying it by its unique identifier.
---

---
--- @class listener
--- @field identifier? string
--- @field callback function
---

---
--- Creates new `ListenerManager` instances, providing a way to encapsulate
--- and manage listeners in different parts of the framework.
--- 
--- @alias listenerManager.constructor fun(): listenerManager
---
